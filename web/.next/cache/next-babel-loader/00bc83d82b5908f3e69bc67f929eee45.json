{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Veh/Documents/GitHub/gundla/web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from \"../client\";\n\nconst Index = props => {\n  const {\n    title = \"Missing title\",\n    name = \"Missing name\"\n  } = props;\n  return __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"By \", name));\n};\n\nIndex.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(`\n    *[_type == \"post\"][0]{title}\n  `, {\n    slug\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/mnt/c/Users/Veh/Documents/GitHub/gundla/web/pages/index.js"],"names":["client","Index","props","title","name","getInitialProps","context","slug","query","fetch"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,KAAK,GAAG,eAAV;AAA2BC,IAAAA,IAAI,GAAG;AAAlC,MAAqDF,KAA3D;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFJ,CADJ;AAMH,CARD;;AAUAH,KAAK,CAACI,eAAN,GAAwB,gBAAgBC,OAAhB,EAAyB;AAC7C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACE,KAA9B;AACA,SAAO,MAAMR,MAAM,CAACS,KAAP,CACR;;GADQ,EAIT;AAAEF,IAAAA;AAAF,GAJS,CAAb;AAMH,CATD;;AAWA,eAAeN,KAAf","sourcesContent":["import client from \"../client\";\n\nconst Index = (props) => {\n    const { title = \"Missing title\", name = \"Missing name\" } = props;\n    return (\n        <article>\n            <h1>{title}</h1>\n            <span>By {name}</span>\n        </article>\n    );\n};\n\nIndex.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query;\n    return await client.fetch(\n        `\n    *[_type == \"post\"][0]{title}\n  `,\n        { slug }\n    );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}